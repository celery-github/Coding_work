######### SELECT statement: Retrieving data from a table
SELECT * FROM employees;

######### WHERE clause: Filtering rows based on a condition
SELECT * FROM orders WHERE order_date > '2023-01-01';

######### JOIN: Combining data from multiple tables
SELECT orders.order_id, customers.customer_name
FROM orders
INNER JOIN customers ON orders.customer_id = customers.customer_id

######### GROUP BY: Grouping rows based on a column
SELECT department_id, COUNT(*) as num_employees
FROM employees
GROUP BY department_id;

######### HAVING clause: Filtering groups in GROUP BY
SELECT department_id, COUNT(*) as num_employees
FROM employees
GROUP BY department_id
HAVING COUNT(*) > 10;

######### ORDER BY: Sorting results
SELECT * FROM products ORDER BY price DESC;

######### Aggregate functions: Performing calculations on data
SELECT AVG(salary) as avg_salary FROM employees;

######### Subqueries: Using queries within queries
SELECT * FROM employees WHERE department_id IN (SELECT department_id FROM departments WHERE location = 'New York');

######### UNION: Combining the results of two or more SELECT statements
SELECT product_name FROM products_in_stock
UNION
SELECT product_name FROM back_ordered_products;

######### Case statements: Conditional logic within queries
SELECT employee_name,
       CASE 
           WHEN salary > 50000 THEN 'High'
           WHEN salary > 30000 THEN 'Medium'
           ELSE 'Low'
       END AS salary_category
FROM employees
